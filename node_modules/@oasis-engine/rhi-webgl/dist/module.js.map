{"version":3,"file":"module.js","sources":["../src/type.ts","../src/WebCanvas.ts","../src/GLCapability.ts","../src/GLExtensions.ts","../src/GLPrimitive.ts","../src/GLRenderStates.ts","../src/GLTexture.ts","../src/GLRenderTarget.ts","../src/GLTexture2D.ts","../src/GLTexture2DArray.ts","../src/GLTextureCube.ts","../src/WebGLRenderer.ts","../src/WebGLEngine.ts"],"sourcesContent":["/**\n * Smoothing plug-in.\n * */\nexport interface WebGLExtension {\n  MAX_DRAW_BUFFERS: GLenum;\n  UNSIGNED_INT_24_8: GLenum;\n  MAX_SAMPLES: GLenum;\n  RGBA8: GLenum;\n  RGBA16F: GLenum;\n  RGBA32F: GLenum;\n  DEPTH_COMPONENT32F: GLenum;\n  READ_FRAMEBUFFER: GLenum;\n  DRAW_FRAMEBUFFER: GLenum;\n\n  createVertexArray(): WebGLVertexArrayObject | null;\n  deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n  isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n  bindVertexArray(array: WebGLVertexArrayObject | null): void;\n\n  renderbufferStorageMultisample(\n    target: GLenum,\n    samples: GLsizei,\n    internalformat: GLenum,\n    width: GLsizei,\n    height: GLsizei\n  ): void;\n  blitFramebuffer(\n    srcX0: GLint,\n    srcY0: GLint,\n    srcX1: GLint,\n    srcY1: GLint,\n    dstX0: GLint,\n    dstY0: GLint,\n    dstX1: GLint,\n    dstY1: GLint,\n    mask: GLbitfield,\n    filter: GLenum\n  ): void;\n\n  drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n  drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n  vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n  drawBuffers(buffers: Iterable<GLenum>): void;\n}\n\nexport interface TextureFormatDetail {\n  internalFormat: GLint;\n  baseFormat?: GLenum;\n  dataType?: GLenum;\n  isCompressed: boolean;\n  attachment?: GLenum;\n}\n\n/**\n * @deprecated\n */\nexport enum GLCompressedTextureInternalFormat {\n  // astc\n  RGBA_ASTC_4X4_KHR = 0x93b0,\n  RGBA_ASTC_5X4_KHR = 0x93b1,\n  RGBA_ASTC_5X5_KHR = 0x93b2,\n  RGBA_ASTC_6X5_KHR = 0x93b3,\n  RGBA_ASTC_6X6_KHR = 0x93b4,\n  RGBA_ASTC_8X5_KHR = 0x93b5,\n  RGBA_ASTC_8X6_KHR = 0x93b6,\n  RGBA_ASTC_8X8_KHR = 0x93b7,\n  RGBA_ASTC_10X5_KHR = 0x93b8,\n  RGBA_ASTC_10X6_KHR = 0x93b9,\n  RGBA_ASTC_10X8_KHR = 0x93ba,\n  RGBA_ASTC_10X10_KHR = 0x93bb,\n  RGBA_ASTC_12X10_KHR = 0x93bc,\n  RGBA_ASTC_12X12_KHR = 0x93bd,\n  SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0,\n  SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1,\n  SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2,\n  SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3,\n  SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4,\n  SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5,\n  SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6,\n  SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7,\n  SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8,\n  SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9,\n  SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da,\n  SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db,\n  SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc,\n  SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd,\n\n  // etc1\n  RGB_ETC1_WEBGL = 0x8d64,\n\n  // etc2\n  R11_EAC = 0x9270,\n  SIGNED_R11_EAC = 0x9271,\n  RG11_EAC = 0x9272,\n  SIGNED_RG11_EAC = 0x9273,\n  RGB8_ETC2 = 0x9274,\n  SRGB8_ETC2 = 0x9275,\n  RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\n  SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\n  RGBA8_ETC2_EAC = 0x9278,\n  SRGB8_ALPHA8_ETC2_EAC = 0x9279,\n\n  // pvrtc\n  RGB_PVRTC_4BPPV1_IMG = 0x8c00,\n  RGB_PVRTC_2BPPV1_IMG = 0x8c01,\n  RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\n  RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\n\n  // s3tc\n  RGB_S3TC_DXT1_EXT = 0x83f0,\n  RGBA_S3TC_DXT1_EXT = 0x83f1,\n  RGBA_S3TC_DXT3_EXT = 0x83f2,\n  RGBA_S3TC_DXT5_EXT = 0x83f3\n}\n","import { Canvas } from \"@oasis-engine/core\";\nimport { Vector2 } from \"@oasis-engine/math\";\n\ntype OffscreenCanvas = any;\n\n/**\n * The canvas used on the web, which can support HTMLCanvasElement and OffscreenCanvas.\n */\nexport class WebCanvas implements Canvas {\n  _webCanvas: HTMLCanvasElement | OffscreenCanvas;\n\n  private _width: number;\n  private _height: number;\n  private _scale: Vector2 = new Vector2();\n\n  /**\n   * @inheritdoc\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    if (this._width !== value) {\n      this._webCanvas.width = value;\n      this._width = value;\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    if (this._height !== value) {\n      this._webCanvas.height = value;\n      this._height = value;\n    }\n  }\n\n  /**\n   * The scale of canvas, the value is visible width/height divide the render width/height.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get scale(): Vector2 {\n    const webCanvas = this._webCanvas;\n    if (typeof OffscreenCanvas === \"undefined\" || !(webCanvas instanceof OffscreenCanvas)) {\n      this._scale.set(\n        (webCanvas.clientWidth * devicePixelRatio) / webCanvas.width,\n        (webCanvas.clientHeight * devicePixelRatio) / webCanvas.height\n      );\n    }\n    return this._scale;\n  }\n\n  set scale(value: Vector2) {\n    const webCanvas = this._webCanvas;\n    if (typeof OffscreenCanvas === \"undefined\" || !(webCanvas instanceof OffscreenCanvas)) {\n      webCanvas.style.transformOrigin = `left top`;\n      webCanvas.style.transform = `scale(${value.x}, ${value.y})`;\n    }\n  }\n\n  /**\n   * Resize the rendering size according to the clientWidth and clientHeight of the canvas.\n   * @param pixelRatio - Pixel ratio\n   */\n  resizeByClientSize(pixelRatio: number = window.devicePixelRatio): void {\n    const webCanvas = this._webCanvas;\n    if (typeof OffscreenCanvas === \"undefined\" || !(webCanvas instanceof OffscreenCanvas)) {\n      this.width = webCanvas.clientWidth * pixelRatio;\n      this.height = webCanvas.clientHeight * pixelRatio;\n    }\n  }\n\n  /**\n   * Create a web canvas.\n   * @param webCanvas - Web native canvas\n   */\n  constructor(webCanvas: HTMLCanvasElement | OffscreenCanvas) {\n    const width = webCanvas.width;\n    const height = webCanvas.height;\n    this._webCanvas = webCanvas;\n    this._width = width;\n    this._height = height;\n  }\n\n  /**\n   * Set scale.\n   * @param x - Scale along the X axis\n   * @param y - Scale along the Y axis\n   */\n  setScale(x: number, y: number): void {\n    this._scale.set(x, y);\n    this.scale = this._scale;\n  }\n}\n","import { GLCapabilityType } from \"@oasis-engine/core\";\nimport { GLCompressedTextureInternalFormat } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\ntype extensionKey = string;\n\n/**\n * GL capability.\n */\nexport class GLCapability {\n  private _maxDrawBuffers: number;\n  private _maxAnisoLevel: number;\n  private _maxAntiAliasing: number;\n\n  _rhi: WebGLRenderer;\n  capabilityList: Map<GLCapabilityType, boolean>;\n\n  get maxTextureSize(): boolean {\n    return this.rhi.renderStates.getParameter(this.rhi.gl.MAX_TEXTURE_SIZE);\n  }\n\n  get canUseFloatTextureBlendShape(): boolean {\n    return (\n      this.canIUse(GLCapabilityType.shaderVertexID) &&\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  /**\n   * Whether can use more joints.\n   */\n  get canIUseMoreJoints(): boolean {\n    return (\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  get maxDrawBuffers() {\n    if (!this._maxDrawBuffers) {\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        this._maxDrawBuffers = this._rhi.gl.getParameter(this._rhi.gl.MAX_DRAW_BUFFERS);\n      } else {\n        this._maxDrawBuffers = 1;\n      }\n    }\n    return this._maxDrawBuffers;\n  }\n\n  /**\n   * Max anisoLevel.\n   */\n  get maxAnisoLevel(): number {\n    if (!this._maxAnisoLevel) {\n      const ext = this._rhi.requireExtension(GLCapabilityType.textureFilterAnisotropic);\n      this._maxAnisoLevel = ext ? this._rhi.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n    }\n    return this._maxAnisoLevel;\n  }\n\n  /**\n   * Max MSAA count.\n   */\n  get maxAntiAliasing(): number {\n    if (!this._maxAntiAliasing) {\n      const gl = this._rhi.gl;\n      const canMSAA = this.canIUse(GLCapabilityType.multipleSample);\n\n      this._maxAntiAliasing = canMSAA ? gl.getParameter(gl.MAX_SAMPLES) : 1;\n    }\n    return this._maxAntiAliasing;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  constructor(rhi: WebGLRenderer) {\n    this._rhi = rhi;\n    this.capabilityList = new Map();\n\n    this._init();\n    this._compatibleAllInterface();\n  }\n\n  /**\n   * Check device capabilities.\n   */\n  canIUse(capabilityType: GLCapabilityType): boolean {\n    return this.capabilityList.get(capabilityType);\n  }\n\n  /**\n   * Check if can use some compressed texture format.\n   */\n  canIUseCompressedTextureInternalFormat(internalType: GLCompressedTextureInternalFormat): boolean {\n    const {\n      // astc\n      RGBA_ASTC_4X4_KHR,\n      RGBA_ASTC_12X12_KHR,\n      SRGB8_ALPHA8_ASTC_4X4_KHR,\n      SRGB8_ALPHA8_ASTC_12X12_KHR,\n      // etc1\n      RGB_ETC1_WEBGL,\n      // etc\n      R11_EAC,\n      SRGB8_ALPHA8_ETC2_EAC,\n      // pvrtc\n      RGB_PVRTC_4BPPV1_IMG,\n      RGBA_PVRTC_2BPPV1_IMG,\n      // s3tc\n      RGB_S3TC_DXT1_EXT,\n      RGBA_S3TC_DXT5_EXT\n    } = GLCompressedTextureInternalFormat;\n    if (\n      (internalType >= RGBA_ASTC_4X4_KHR && RGBA_ASTC_12X12_KHR <= RGBA_ASTC_12X12_KHR) ||\n      (internalType >= SRGB8_ALPHA8_ASTC_4X4_KHR && internalType <= SRGB8_ALPHA8_ASTC_12X12_KHR)\n    ) {\n      return this.canIUse(GLCapabilityType.astc);\n    } else if (internalType === RGB_ETC1_WEBGL) {\n      return this.canIUse(GLCapabilityType.etc1);\n    } else if (internalType >= R11_EAC && internalType <= SRGB8_ALPHA8_ETC2_EAC) {\n      return this.canIUse(GLCapabilityType.etc);\n    } else if (internalType >= RGB_PVRTC_4BPPV1_IMG && internalType <= RGBA_PVRTC_2BPPV1_IMG) {\n      return this.canIUse(GLCapabilityType.pvrtc);\n    } else if (internalType >= RGB_S3TC_DXT1_EXT && internalType <= RGBA_S3TC_DXT5_EXT) {\n      return this.canIUse(GLCapabilityType.s3tc);\n    }\n    return false;\n  }\n\n  /**\n   *  Init capabilities.\n   */\n  private _init() {\n    const cap = this.capabilityList;\n    const { isWebGL2 } = this.rhi;\n    const requireExtension = this.rhi.requireExtension.bind(this.rhi);\n\n    const {\n      shaderVertexID,\n      standardDerivatives,\n      shaderTextureLod,\n      elementIndexUint,\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      multipleSample,\n      drawBuffers,\n\n      astc,\n      astc_webkit,\n      etc,\n      etc_webkit,\n      etc1,\n      etc1_webkit,\n      pvrtc,\n      pvrtc_webkit,\n      s3tc,\n      s3tc_webkit,\n\n      textureFloat,\n      textureHalfFloat,\n      textureFloatLinear,\n      textureHalfFloatLinear,\n      WEBGL_colorBufferFloat,\n      colorBufferFloat,\n      colorBufferHalfFloat,\n      textureFilterAnisotropic\n    } = GLCapabilityType;\n    cap.set(shaderVertexID, isWebGL2);\n    cap.set(standardDerivatives, isWebGL2 || !!requireExtension(standardDerivatives));\n    cap.set(shaderTextureLod, isWebGL2 || !!requireExtension(shaderTextureLod));\n    cap.set(elementIndexUint, isWebGL2 || !!requireExtension(elementIndexUint));\n    cap.set(depthTexture, isWebGL2 || !!requireExtension(depthTexture));\n    cap.set(vertexArrayObject, isWebGL2 || !!requireExtension(vertexArrayObject));\n    cap.set(instancedArrays, isWebGL2 || !!requireExtension(instancedArrays));\n    cap.set(multipleSample, isWebGL2);\n    cap.set(drawBuffers, isWebGL2 || !!requireExtension(drawBuffers));\n    cap.set(textureFloat, isWebGL2 || !!requireExtension(textureFloat));\n    cap.set(textureHalfFloat, isWebGL2 || !!requireExtension(textureHalfFloat));\n    cap.set(textureFloatLinear, !!requireExtension(textureFloatLinear));\n    cap.set(textureHalfFloatLinear, isWebGL2 || !!requireExtension(textureHalfFloatLinear));\n    cap.set(\n      colorBufferFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(WEBGL_colorBufferFloat)\n    );\n    cap.set(\n      colorBufferHalfFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(colorBufferHalfFloat)\n    );\n    cap.set(textureFilterAnisotropic, !!requireExtension(textureFilterAnisotropic));\n\n    cap.set(astc, !!(requireExtension(astc) || requireExtension(astc_webkit)));\n    cap.set(etc, !!(requireExtension(etc) || requireExtension(etc_webkit)));\n    cap.set(etc1, !!(requireExtension(etc1) || requireExtension(etc1_webkit)));\n    cap.set(pvrtc, !!(requireExtension(pvrtc) || requireExtension(pvrtc_webkit)));\n    cap.set(s3tc, !!(requireExtension(s3tc) || requireExtension(s3tc_webkit)));\n  }\n\n  /**\n   * If there are extensions that can supplement this ability, smooth out the difference.\n   * @example\n   * compatible(GLCapabilityType.depthTexture,{\n   *    UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n   * })\n   * gl.UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL\n   */\n  private _compatibleInterface(capabilityType: GLCapabilityType, flatItem: { [glKey: string]: extensionKey }) {\n    const rhi = this.rhi;\n    const gl = rhi.gl;\n    let ext = null;\n\n    if ((ext = rhi.requireExtension(capabilityType))) {\n      for (let glKey in flatItem) {\n        const extensionKey = flatItem[glKey];\n        const extensionVal = ext[extensionKey];\n\n        // Mini game hack the native function,use “.bind” to smooth out if is “Funcion”.\n        if (extensionVal?.bind) {\n          gl[glKey] = extensionVal.bind(ext);\n        } else {\n          gl[glKey] = extensionVal;\n        }\n      }\n    }\n  }\n\n  private _compatibleAllInterface() {\n    const {\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      drawBuffers,\n      textureFilterAnisotropic,\n      textureHalfFloat,\n      colorBufferHalfFloat,\n      WEBGL_colorBufferFloat\n    } = GLCapabilityType;\n    const { isWebGL2 } = this.rhi;\n\n    if (!isWebGL2) {\n      this._compatibleInterface(depthTexture, {\n        UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n      });\n      this._compatibleInterface(vertexArrayObject, {\n        createVertexArray: \"createVertexArrayOES\",\n        deleteVertexArray: \"deleteVertexArrayOES\",\n        isVertexArray: \"isVertexArrayOES\",\n        bindVertexArray: \"bindVertexArrayOES\"\n      });\n      this._compatibleInterface(instancedArrays, {\n        drawArraysInstanced: \"drawArraysInstancedANGLE\",\n        drawElementsInstanced: \"drawElementsInstancedANGLE\",\n        vertexAttribDivisor: \"vertexAttribDivisorANGLE\"\n      });\n      this._compatibleInterface(drawBuffers, {\n        MAX_DRAW_BUFFERS: \"MAX_DRAW_BUFFERS_WEBGL\"\n      });\n      const items = {};\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        const maxDrawBuffers = this.maxDrawBuffers;\n        for (let i = 0; i < maxDrawBuffers; i++) {\n          i != 0 && (items[`COLOR_ATTACHMENT${i}`] = `COLOR_ATTACHMENT${i}_WEBGL`);\n          items[`DRAW_BUFFER${i}`] = `DRAW_BUFFER${i}_WEBGL`;\n        }\n        this._compatibleInterface(drawBuffers, {\n          drawBuffers: \"drawBuffersWEBGL\",\n          ...items\n        });\n      }\n      this._compatibleInterface(textureHalfFloat, {\n        HAFL_FLOAT: \"HALF_FLOAT_OES\"\n      });\n      this._compatibleInterface(colorBufferHalfFloat, {\n        RGBA16F: \"RBGA16F_EXT\"\n      });\n      this._compatibleInterface(WEBGL_colorBufferFloat, {\n        RGBA32F: \"RBGA32F_EXT\"\n      });\n    }\n\n    this._compatibleInterface(textureFilterAnisotropic, {\n      TEXTURE_MAX_ANISOTROPY_EXT: \"TEXTURE_MAX_ANISOTROPY_EXT\"\n    });\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType } from \"@oasis-engine/core\";\n\n/**\n * GLContext extension.\n */\nexport class GLExtensions {\n  private rhi: WebGLRenderer;\n  private _requireResult;\n\n  constructor(rhi: WebGLRenderer) {\n    this.rhi = rhi;\n    this._requireResult = {};\n  }\n\n  /**\n   * Require an extension.\n   */\n  requireExtension(ext: GLCapabilityType) {\n    if (this._requireResult[ext] !== undefined) {\n      return this._requireResult[ext];\n    }\n\n    this._requireResult[ext] = this.rhi.gl.getExtension(ext);\n    return this._requireResult[ext];\n  }\n}\n","import { GLCapabilityType, Logger, Mesh, SubMesh } from \"@oasis-engine/core\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { WebGLExtension } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Improvement of VAO:\n * 1) WebGL2.0 must support VAO, almost all devices support vao extensions in webgl1.0, we can use PollyFill,only keep VAO mode.\n * 2) VAO implementation now has bugs, change IndexBuffer、VertexBuffer、VertexElements need to update VAO.\n */\n\n/**\n * @internal\n * GL platform primitive.\n */\nexport class GLPrimitive implements IPlatformPrimitive {\n  protected attribLocArray: number[] = [];\n  protected readonly _primitive: Mesh;\n  protected readonly canUseInstancedArrays: boolean;\n\n  private gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private vao: Map<number, WebGLVertexArrayObject> = new Map();\n  private readonly _useVao: boolean;\n\n  constructor(rhi: WebGLRenderer, primitive: Mesh) {\n    this._primitive = primitive;\n    this.canUseInstancedArrays = rhi.canIUse(GLCapabilityType.instancedArrays);\n    this._useVao = rhi.canIUse(GLCapabilityType.vertexArrayObject);\n    this.gl = rhi.gl;\n  }\n\n  /**\n   * Draw the primitive.\n   */\n  draw(shaderProgram: any, subMesh: SubMesh): void {\n    const gl = this.gl;\n    const primitive = this._primitive;\n    // @ts-ignore\n    const useVao = this._useVao && primitive._enableVAO;\n\n    if (useVao) {\n      if (!this.vao.has(shaderProgram.id)) {\n        this.registerVAO(shaderProgram);\n      }\n      const vao = this.vao.get(shaderProgram.id);\n      gl.bindVertexArray(vao);\n    } else {\n      this.bindBufferAndAttrib(shaderProgram);\n    }\n\n    // @ts-ignore\n    const { _indexBufferBinding, _instanceCount, _glIndexType, _glIndexByteCount } = primitive;\n    const { topology, start, count } = subMesh;\n\n    if (!_instanceCount) {\n      if (_indexBufferBinding) {\n        if (useVao) {\n          gl.drawElements(topology, count, _glIndexType, start * _glIndexByteCount);\n        } else {\n          const { _nativeBuffer } = _indexBufferBinding.buffer;\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n          gl.drawElements(topology, count, _glIndexType, start * _glIndexByteCount);\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        }\n      } else {\n        gl.drawArrays(topology, start, count);\n      }\n    } else {\n      if (this.canUseInstancedArrays) {\n        if (_indexBufferBinding) {\n          if (this._useVao) {\n            gl.drawElementsInstanced(topology, count, _glIndexType, start * _glIndexByteCount, _instanceCount);\n          } else {\n            const { _nativeBuffer } = _indexBufferBinding.buffer;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n            gl.drawElementsInstanced(topology, count, _glIndexType, start * _glIndexByteCount, _instanceCount);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n          }\n        } else {\n          gl.drawArraysInstanced(topology, start, count, _instanceCount);\n        }\n      } else {\n        Logger.error(\"ANGLE_instanced_arrays extension is not supported\");\n      }\n    }\n\n    // unbind\n    if (this._useVao) {\n      gl.bindVertexArray(null);\n    } else {\n      this.disableAttrib();\n    }\n  }\n\n  destroy() {\n    if (this._useVao) {\n      const gl = this.gl;\n      this.vao.forEach((vao) => {\n        gl.deleteVertexArray(vao);\n      });\n      this.vao.clear();\n    }\n  }\n\n  /**\n   * Bind buffer and attribute.\n   */\n  protected bindBufferAndAttrib(shaderProgram: any): void {\n    const gl = this.gl;\n    const primitive = this._primitive;\n    // @ts-ignore\n    const vertexBufferBindings = primitive._vertexBufferBindings;\n\n    this.attribLocArray.length = 0;\n    const attributeLocation = shaderProgram.attributeLocation;\n    const attributes = primitive._vertexElementMap;\n\n    let vbo: WebGLBuffer;\n    let lastBoundVbo: WebGLBuffer;\n\n    for (const name in attributeLocation) {\n      const loc = attributeLocation[name];\n      if (loc === -1) continue;\n\n      const element = attributes[name];\n      if (element) {\n        const { buffer, stride } = vertexBufferBindings[element.bindingIndex];\n        vbo = buffer._nativeBuffer;\n        // prevent binding the vbo which already bound at the last loop, e.g. a buffer with multiple attributes.\n        if (lastBoundVbo !== vbo) {\n          lastBoundVbo = vbo;\n          gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        }\n\n        gl.enableVertexAttribArray(loc);\n        const elementInfo = element._glElementInfo;\n        gl.vertexAttribPointer(loc, elementInfo.size, elementInfo.type, elementInfo.normalized, stride, element.offset);\n        if (this.canUseInstancedArrays) {\n          gl.vertexAttribDivisor(loc, element.instanceStepRate);\n        }\n        this.attribLocArray.push(loc);\n      } else {\n        Logger.warn(\"vertex attribute not found: \" + name);\n      }\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  protected disableAttrib() {\n    const gl = this.gl;\n    for (let i = 0, l = this.attribLocArray.length; i < l; i++) {\n      gl.disableVertexAttribArray(this.attribLocArray[i]);\n    }\n  }\n\n  private registerVAO(shaderProgram: any): void {\n    const gl = this.gl;\n    const vao = gl.createVertexArray();\n\n    /** register VAO */\n    gl.bindVertexArray(vao);\n\n    // @ts-ignore\n    const { _indexBufferBinding } = this._primitive;\n    if (_indexBufferBinding) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _indexBufferBinding.buffer._nativeBuffer);\n    }\n    this.bindBufferAndAttrib(shaderProgram);\n\n    /** unbind */\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    this.disableAttrib();\n\n    this.vao.set(shaderProgram.id, vao);\n  }\n}\n","/**\n * @private\n */\nexport class GLRenderStates {\n  private _gl: WebGLRenderingContext;\n  private _parameters = {};\n  /**\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n    this._parameters = {}; // current gl state parameters\n\n    /** cache */\n    this._parameters[gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_VERTEX_UNIFORM_VECTORS] = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this._parameters[gl.MAX_VERTEX_ATTRIBS] = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this._parameters[gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_TEXTURE_SIZE] = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\n    // init blend state same as BlendState default value.\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    gl.colorMask(true, true, true, true);\n    gl.blendColor(0, 0, 0, 0);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n    // init depth state same as DepthState default value.\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.depthMask(true);\n\n    // init stencil state same as StencilState default value.\n    gl.disable(gl.STENCIL_TEST);\n    gl.stencilFuncSeparate(gl.FRONT, gl.ALWAYS, 0, 0xff);\n    gl.stencilFuncSeparate(gl.BACK, gl.ALWAYS, 0, 0xff);\n    gl.stencilOpSeparate(gl.FRONT, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilOpSeparate(gl.BACK, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilMask(0xff);\n\n    // init raster state same as RasterState default value.\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(0, 0);\n  }\n\n  /**\n   * Get a parameter.\n   */\n  getParameter(pname) {\n    return this._parameters[pname];\n  }\n}\n","import {\n  GLCapabilityType,\n  IPlatformTexture,\n  Logger,\n  Texture,\n  TextureCubeFace,\n  TextureFilterMode,\n  TextureFormat,\n  RenderBufferDepthFormat,\n  TextureWrapMode\n} from \"@oasis-engine/core\";\nimport { GLCompressedTextureInternalFormat, TextureFormatDetail } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Texture in WebGL platform.\n */\nexport class GLTexture implements IPlatformTexture {\n  /** @internal */\n  static _isPowerOf2(v: number): boolean {\n    return (v & (v - 1)) === 0;\n  }\n\n  /**\n   * Get more texture info from TextureFormat.\n   * @internal\n   */\n  static _getFormatDetail(\n    format: TextureFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case TextureFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case TextureFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case TextureFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case TextureFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.LuminanceAlpha:\n        return {\n          internalFormat: gl.LUMINANCE_ALPHA,\n          baseFormat: gl.LUMINANCE_ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R16G16B16A16:\n        return {\n          internalFormat: gl.RGBA16F,\n          baseFormat: gl.RGBA,\n          dataType: gl.HALF_FLOAT,\n          isCompressed: false\n        };\n      case TextureFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      case TextureFormat.DXT1:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.DXT5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.ETC1_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_4x4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_5x5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_6x6:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_8x8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_10x10:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_12x12:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR,\n          isCompressed: true\n        };\n      default:\n        throw new Error(`this TextureFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * In WebGL 1, internalformat must be the same as baseFormat when call texImage2D.\n   * @internal\n   */\n  static _getRenderBufferDepthFormatDetail(\n    format: TextureFormat | RenderBufferDepthFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case TextureFormat.Depth:\n      case RenderBufferDepthFormat.Depth:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT32F : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: isWebGL2 ? gl.FLOAT : gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case TextureFormat.DepthStencil:\n      case RenderBufferDepthFormat.DepthStencil:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case TextureFormat.Stencil:\n      case RenderBufferDepthFormat.Stencil:\n        return {\n          internalFormat: gl.STENCIL_INDEX8,\n          baseFormat: gl.STENCIL_ATTACHMENT,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false,\n          attachment: gl.STENCIL_ATTACHMENT\n        };\n      case TextureFormat.Depth16:\n      case RenderBufferDepthFormat.Depth16:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT16 : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case TextureFormat.Depth24:\n      case RenderBufferDepthFormat.Depth24:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT24,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case TextureFormat.Depth32:\n      case RenderBufferDepthFormat.Depth32:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT32F,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.FLOAT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case TextureFormat.Depth24Stencil8:\n      case RenderBufferDepthFormat.Depth24Stencil8:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case TextureFormat.Depth32Stencil8:\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        return {\n          internalFormat: gl.DEPTH32F_STENCIL8,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      default:\n        throw new Error(`this TextureFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * Check whether the corresponding texture format is supported.\n   * @internal\n   */\n  static _supportTextureFormat(format: TextureFormat, rhi: WebGLRenderer): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case TextureFormat.R16G16B16A16:\n        {\n          if (!rhi.canIUse(GLCapabilityType.textureHalfFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n      case TextureFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferColorFormat(format: TextureFormat, rhi: WebGLRenderer): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case TextureFormat.R16G16B16A16:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferHalfFloat) || !rhi.canIUse(GLCapabilityType.textureHalfFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n      case TextureFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferFloat) || !rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferDepthFormat(\n    format: TextureFormat | RenderBufferDepthFormat,\n    rhi: WebGLRenderer,\n    isTexture: boolean\n  ): boolean {\n    const isWebGL2: boolean = rhi.isWebGL2;\n    let isSupported = true;\n\n    if (isTexture && !rhi.canIUse(GLCapabilityType.depthTexture)) {\n      return false;\n    }\n\n    switch (format) {\n      case RenderBufferDepthFormat.Stencil:\n      case TextureFormat.Stencil:\n        isSupported = false;\n        break;\n      case TextureFormat.Depth24:\n      case TextureFormat.Depth32:\n      case TextureFormat.Depth32Stencil8:\n      case RenderBufferDepthFormat.Depth24:\n      case RenderBufferDepthFormat.Depth32:\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        if (!isWebGL2) {\n          isSupported = false;\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /** @internal */\n  _texture: Texture;\n  /** @internal */\n  _glTexture: WebGLTexture;\n  /** @internal */\n  _rhi: WebGLRenderer;\n  /** @internal */\n  _gl: WebGLRenderingContext & WebGL2RenderingContext;\n  /** @internal */\n  _isWebGL2: boolean;\n  /** @internal */\n  _target: GLenum; // gl.TEXTURE_2D | gl.TEXTURE_CUBE_MAP\n  /** @internal */\n  _formatDetail: TextureFormatDetail;\n\n  /**\n   * Wrapping mode for texture coordinate S.\n   */\n  set wrapModeU(value: TextureWrapMode) {\n    this._bind();\n    this._setWrapMode(value, this._gl.TEXTURE_WRAP_S);\n  }\n\n  /**\n   * Wrapping mode for texture coordinate T.\n   */\n  set wrapModeV(value: TextureWrapMode) {\n    this._bind();\n    this._setWrapMode(value, this._gl.TEXTURE_WRAP_T);\n  }\n\n  /**\n   * Filter mode for texture.\n   */\n  set filterMode(value: TextureFilterMode) {\n    const gl = this._gl;\n    const target = this._target;\n    /** @ts-ignore */\n    const { _mipmap } = this._texture;\n\n    this._bind();\n    switch (value) {\n      case TextureFilterMode.Point:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST);\n        break;\n      case TextureFilterMode.Bilinear:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR);\n        break;\n      case TextureFilterMode.Trilinear:\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, _mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        break;\n    }\n  }\n\n  /**\n   * Anisotropic level for texture.\n   */\n  set anisoLevel(value: number) {\n    const gl = this._gl as WebGLRenderingContext & WebGL2RenderingContext & EXT_texture_filter_anisotropic;\n\n    this._bind();\n    gl.texParameterf(this._target, gl.TEXTURE_MAX_ANISOTROPY_EXT, value);\n  }\n\n  /**\n   * Create texture in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, texture: Texture, target: GLenum) {\n    this._texture = texture;\n    this._rhi = rhi;\n    this._gl = rhi.gl as WebGLRenderingContext & WebGL2RenderingContext;\n    this._isWebGL2 = rhi.isWebGL2;\n    this._target = target;\n    this._glTexture = this._gl.createTexture();\n  }\n\n  /**\n   * Destroy texture.\n   */\n  destroy() {\n    this._gl.deleteTexture(this._glTexture);\n    this._texture = null;\n    this._glTexture = null;\n    this._formatDetail = null;\n  }\n\n  /**\n   * Generate multi-level textures based on the 0th level data.\n   */\n  generateMipmaps(): void {\n    this._bind();\n    this._gl.generateMipmap(this._target);\n  }\n\n  protected _bind() {\n    this._rhi.bindTexture(this);\n  }\n\n  /**\n   * Pre-development mipmapping GPU memory.\n   */\n  protected _initMipmap(isCube: boolean): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    let { internalFormat, baseFormat, dataType } = this._formatDetail;\n    const { mipmapCount, width, height } = this._texture;\n\n    this._bind();\n\n    if (isWebGL2 && !(baseFormat === gl.LUMINANCE_ALPHA || baseFormat === gl.ALPHA)) {\n      gl.texStorage2D(this._target, mipmapCount, internalFormat, width, height);\n    } else {\n      // In WebGL 1, internalformat must be the same as baseFormat\n      if (baseFormat !== internalFormat) {\n        internalFormat = baseFormat;\n      }\n\n      if (!isCube) {\n        for (let i = 0; i < mipmapCount; i++) {\n          const mipWidth = Math.max(1, width >> i);\n          const mipHeight = Math.max(1, height >> i);\n\n          gl.texImage2D(this._target, i, internalFormat, mipWidth, mipHeight, 0, baseFormat, dataType, null);\n        }\n      } else {\n        for (let i = 0; i < mipmapCount; i++) {\n          const size = Math.max(1, width >> i);\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            gl.texImage2D(\n              gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n              i,\n              internalFormat,\n              size,\n              size,\n              0,\n              baseFormat,\n              dataType,\n              null\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   * @param mipLevel - Set mip level the data want to get from\n   */\n  protected _getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._getReadFrameBuffer());\n\n    if (mipLevel > 0 && !this._isWebGL2) {\n      mipLevel = 0;\n      Logger.error(\"mipLevel only take effect in WebGL2.0\");\n    }\n\n    if (face != null) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        this._glTexture,\n        mipLevel\n      );\n    } else {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._glTexture, mipLevel);\n    }\n    gl.readPixels(x, y, width, height, baseFormat, dataType, out);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  private _setWrapMode(value: TextureWrapMode, pname: GLenum): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const target = this._target;\n    const { width, height } = this._texture;\n\n    if (\n      !isWebGL2 &&\n      value !== TextureWrapMode.Clamp &&\n      (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))\n    ) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for REPEAT or MIRRORED_REPEAT in WebGL1,and has automatically downgraded to CLAMP_TO_EDGE\"\n      );\n      value = TextureWrapMode.Clamp;\n    }\n\n    switch (value) {\n      case TextureWrapMode.Clamp:\n        gl.texParameteri(target, pname, gl.CLAMP_TO_EDGE);\n        break;\n      case TextureWrapMode.Repeat:\n        gl.texParameteri(target, pname, gl.REPEAT);\n        break;\n      case TextureWrapMode.Mirror:\n        gl.texParameteri(target, pname, gl.MIRRORED_REPEAT);\n        break;\n    }\n  }\n\n  protected _getReadFrameBuffer(): WebGLFramebuffer {\n    let frameBuffer = this._rhi._readFrameBuffer;\n    if (!frameBuffer) {\n      this._rhi._readFrameBuffer = frameBuffer = this._gl.createFramebuffer();\n    }\n    return frameBuffer;\n  }\n}\n","import {\n  GLCapabilityType,\n  IPlatformRenderTarget,\n  Logger,\n  RenderTarget,\n  Texture,\n  TextureCube,\n  TextureCubeFace,\n  TextureFormat\n} from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * The render target in WebGL platform is used for off-screen rendering.\n */\nexport class GLRenderTarget implements IPlatformRenderTarget {\n  private _gl: WebGLRenderingContext & WebGL2RenderingContext;\n  private _isWebGL2: boolean;\n  private _target: RenderTarget;\n  private _frameBuffer: WebGLFramebuffer;\n  private _MSAAFrameBuffer: WebGLFramebuffer | null;\n  private _depthRenderBuffer: WebGLRenderbuffer | null;\n  private _MSAAColorRenderBuffers: WebGLRenderbuffer[] = [];\n  private _MSAADepthRenderBuffer: WebGLRenderbuffer | null;\n  private _oriDrawBuffers: GLenum[];\n  private _blitDrawBuffers: GLenum[] | null;\n  private _curMipLevel: number = 0;\n\n  /**\n   * Create render target in WebGL platform.\n   */\n  constructor(rhi: WebGLRenderer, target: RenderTarget) {\n    this._gl = rhi.gl as WebGLRenderingContext & WebGL2RenderingContext;\n    this._isWebGL2 = rhi.isWebGL2;\n    this._target = target;\n\n    /** @ts-ignore */\n    const { _colorTextures, _depth, width, height } = target;\n    const isDepthTexture = _depth instanceof Texture;\n\n    /** todo\n     * MRT + Cube + [,MSAA]\n     * MRT + MSAA\n     */\n\n    for (let i = 0, n = _colorTextures.length; i < n; i++) {\n      const format = _colorTextures[i]._format;\n      if (!GLTexture._supportRenderBufferColorFormat(format, rhi)) {\n        throw new Error(`TextureFormat is not supported:${TextureFormat[format]} in RenderTarget`);\n      }\n    }\n\n    if (!GLTexture._supportRenderBufferDepthFormat(isDepthTexture ? _depth.format : _depth, rhi, isDepthTexture)) {\n      throw new Error(`TextureFormat is not supported:${TextureFormat[_depth]} in RenderTarget`);\n    }\n\n    if (_colorTextures.length > 1 && !rhi.canIUse(GLCapabilityType.drawBuffers)) {\n      throw new Error(\"MRT is not supported\");\n    }\n\n    if (_colorTextures.some((v: Texture) => v.width !== width || v.height !== height)) {\n      throw new Error(\"ColorTexture's size must as same as RenderTarget\");\n    }\n\n    if (isDepthTexture && (_depth.width !== width || _depth.height !== height)) {\n      throw new Error(\"DepthTexture's size must as same as RenderTarget\");\n    }\n\n    // todo: necessary to support MRT + Cube + [,MSAA] ?\n    if (_colorTextures.length > 1 && _colorTextures.some((v: Texture) => v instanceof TextureCube)) {\n      throw new Error(\"MRT+Cube+[,MSAA] is not supported\");\n    }\n\n    const maxAntiAliasing = rhi.capability.maxAntiAliasing;\n    if (target.antiAliasing > maxAntiAliasing) {\n      Logger.warn(`MSAA antiAliasing exceeds the limit and is automatically downgraded to:${maxAntiAliasing}`);\n\n      /** @ts-ignore */\n      target._antiAliasing = maxAntiAliasing;\n    }\n\n    this._frameBuffer = this._gl.createFramebuffer();\n\n    // bind main FBO\n    this._bindMainFBO();\n\n    // bind MSAA FBO\n    if (target.antiAliasing > 1) {\n      this._MSAAFrameBuffer = this._gl.createFramebuffer();\n      this._bindMSAAFBO();\n    }\n  }\n\n  /**\n   * Set which face and mipLevel of the cube texture to render to.\n   * @param faceIndex - Cube texture face\n   * @param mipLevel - Set mip level the data want to write\n   */\n  setRenderTargetInfo(faceIndex: TextureCubeFace, mipLevel: number): void {\n    const { _gl: gl, _target: target } = this;\n    const { depthTexture } = target;\n    const colorTexture = target.getColorTexture(0);\n    const mipChanged = mipLevel !== this._curMipLevel;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    if (colorTexture) {\n      const isCube = colorTexture instanceof TextureCube;\n      if (mipChanged || isCube) {\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          gl.COLOR_ATTACHMENT0,\n          isCube ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex : gl.TEXTURE_2D,\n          /** @ts-ignore */\n          (colorTexture._platformTexture as GLTexture)._glTexture,\n          mipLevel\n        );\n      }\n    }\n    if (depthTexture) {\n      const isCube = depthTexture instanceof TextureCube;\n      if (mipChanged || isCube) {\n        /** @ts-ignore */\n        const { _platformTexture: platformTexture } = depthTexture;\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          platformTexture._formatDetail.attachment,\n          isCube ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex : gl.TEXTURE_2D,\n          platformTexture._glTexture,\n          mipLevel\n        );\n      }\n    } else {\n      if (mipChanged) {\n        // @ts-ignore\n        const { internalFormat } = GLTexture._getRenderBufferDepthFormatDetail(target._depth, gl, this._isWebGL2);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, target.width >> mipLevel, target.height >> mipLevel);\n      }\n    }\n    this._curMipLevel = mipLevel;\n\n    // revert current activated render target\n    this._activeRenderTarget();\n  }\n\n  /**\n   * Blit FBO.\n   */\n  blitRenderTarget(): void {\n    if (!this._MSAAFrameBuffer) return;\n\n    const gl = this._gl;\n    const mask = gl.COLOR_BUFFER_BIT | (this._target.depthTexture ? gl.DEPTH_BUFFER_BIT : 0);\n    const { colorTextureCount, width, height } = this._target;\n\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._MSAAFrameBuffer);\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._frameBuffer);\n\n    for (let textureIndex = 0; textureIndex < colorTextureCount; textureIndex++) {\n      const attachment = gl.COLOR_ATTACHMENT0 + textureIndex;\n\n      this._blitDrawBuffers[textureIndex] = attachment;\n\n      gl.readBuffer(attachment);\n      gl.drawBuffers(this._blitDrawBuffers);\n      gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, gl.NEAREST);\n\n      this._blitDrawBuffers[textureIndex] = gl.NONE;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * Destroy render target.\n   */\n  destroy(): void {\n    const gl = this._gl;\n\n    this._frameBuffer && gl.deleteFramebuffer(this._frameBuffer);\n    this._depthRenderBuffer && gl.deleteRenderbuffer(this._depthRenderBuffer);\n    this._MSAAFrameBuffer && gl.deleteFramebuffer(this._MSAAFrameBuffer);\n    this._MSAADepthRenderBuffer && gl.deleteRenderbuffer(this._MSAADepthRenderBuffer);\n\n    for (let i = 0; i < this._MSAAColorRenderBuffers.length; i++) {\n      gl.deleteRenderbuffer(this._MSAAColorRenderBuffers[i]);\n    }\n\n    this._frameBuffer = null;\n    this._depthRenderBuffer = null;\n    this._MSAAFrameBuffer = null;\n    this._MSAAColorRenderBuffers.length = 0;\n    this._MSAADepthRenderBuffer = null;\n  }\n\n  /**\n   * Activate this RenderTarget.\n   * @internal\n   * @remarks\n   * If MSAA is turned on, MSAA FBO is activated, and then this._blitRenderTarget() is performed to exchange FBO.\n   * If MSAA is not turned on, activate the main FBO.\n   */\n  _activeRenderTarget(): void {\n    const gl = this._gl;\n\n    if (this._MSAAFrameBuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n    }\n  }\n\n  private _bindMainFBO(): void {\n    const gl = this._gl;\n    const isWebGL2: boolean = this._isWebGL2;\n\n    /** @ts-ignore */\n    const { _depth, colorTextureCount, width, height } = this._target;\n    const drawBuffers = new Array(colorTextureCount);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    /** color render buffer */\n    for (let i = 0; i < colorTextureCount; i++) {\n      const colorTexture = this._target.getColorTexture(i);\n      const attachment = gl.COLOR_ATTACHMENT0 + i;\n\n      drawBuffers[i] = attachment;\n\n      if (!(colorTexture instanceof TextureCube)) {\n        gl.framebufferTexture2D(\n          gl.FRAMEBUFFER,\n          attachment,\n          gl.TEXTURE_2D,\n          /** @ts-ignore */\n          (colorTexture._platformTexture as GLTexture)._glTexture,\n          0\n        );\n      }\n    }\n\n    if (colorTextureCount > 1) {\n      gl.drawBuffers(drawBuffers);\n    }\n    this._oriDrawBuffers = drawBuffers;\n\n    /** depth render buffer */\n    if (_depth !== null) {\n      if (_depth instanceof Texture) {\n        if (!(_depth instanceof TextureCube)) {\n          gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            /** @ts-ignore */\n            (_depth._platformTexture as GLTexture)._formatDetail.attachment,\n            gl.TEXTURE_2D,\n            /** @ts-ignore */\n            (_depth._platformTexture as GLTexture)._glTexture,\n            0\n          );\n        }\n      } else if (this._target.antiAliasing <= 1) {\n        const { internalFormat, attachment } = GLTexture._getRenderBufferDepthFormatDetail(_depth, gl, isWebGL2);\n        const depthRenderBuffer = gl.createRenderbuffer();\n\n        this._depthRenderBuffer = depthRenderBuffer;\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, depthRenderBuffer);\n      }\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  private _bindMSAAFBO(): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const MSAADepthRenderBuffer = gl.createRenderbuffer();\n\n    /** @ts-ignore */\n    const { _depth, colorTextureCount, antiAliasing, width, height } = this._target;\n\n    this._blitDrawBuffers = new Array(colorTextureCount);\n    this._MSAADepthRenderBuffer = MSAADepthRenderBuffer;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n\n    // prepare MRT+MSAA color RBOs\n    for (let i = 0; i < colorTextureCount; i++) {\n      const MSAAColorRenderBuffer = gl.createRenderbuffer();\n\n      this._MSAAColorRenderBuffers[i] = MSAAColorRenderBuffer;\n      this._blitDrawBuffers[i] = gl.NONE;\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAAColorRenderBuffer);\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        antiAliasing,\n        /** @ts-ignore */\n        (this._target.getColorTexture(i)._platformTexture as GLTexture)._formatDetail.internalFormat,\n        width,\n        height\n      );\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.RENDERBUFFER, MSAAColorRenderBuffer);\n    }\n    gl.drawBuffers(this._oriDrawBuffers);\n\n    // prepare MSAA depth RBO\n    if (_depth !== null) {\n      const { internalFormat, attachment } =\n        _depth instanceof Texture\n          ? /** @ts-ignore */\n            (_depth._platformTexture as GLTexture)._formatDetail\n          : GLTexture._getRenderBufferDepthFormatDetail(_depth, gl, isWebGL2);\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAADepthRenderBuffer);\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, antiAliasing, internalFormat, width, height);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, MSAADepthRenderBuffer);\n    }\n\n    this._checkFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  private _checkFrameBuffer(): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    switch (e) {\n      case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n        throw new Error(\n          \"The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete\"\n        );\n      case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n        throw new Error(\"There is no attachment\");\n      case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n        throw new Error(\" Height and width of the attachment are not the same.\");\n      case gl.FRAMEBUFFER_UNSUPPORTED:\n        throw new Error(\n          \"The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer\"\n        );\n    }\n\n    if (isWebGL2 && e === gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE) {\n      throw new Error(\n        \"The values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.\"\n      );\n    }\n  }\n}\n","import { IPlatformTexture2D, Logger, Texture2D, TextureFormat } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Texture 2d in WebGL platform.\n */\nexport class GLTexture2D extends GLTexture implements IPlatformTexture2D {\n  /** Backward compatible with WebGL1.0. */\n  private _compressedMipFilled: number = 0;\n\n  constructor(rhi: WebGLRenderer, texture2D: Texture2D) {\n    super(rhi, texture2D, rhi.gl.TEXTURE_2D);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width, height } = texture2D;\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (_mipmap && !isWebGL2 && (!GLTexture._isPowerOf2(width) || !GLTexture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      texture2D._mipmap = false;\n      /** @ts-ignore */\n      texture2D._mipmapCount = texture2D._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getFormatDetail(format, this._gl, isWebGL2);\n    (this._formatDetail.isCompressed && !isWebGL2) || this._initMipmap(false);\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2D.setPixelBuffer}\n   */\n  setPixelBuffer(\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x: number,\n    y: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl = this._gl;\n    const isWebGL2: boolean = this._isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipWidth = Math.max(1, this._texture.width >> mipLevel);\n    const mipHeight = Math.max(1, this._texture.height >> mipLevel);\n\n    width = width || mipWidth - x;\n    height = height || mipHeight - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedMipFilled & mipBit) {\n        gl.compressedTexSubImage2D(this._target, mipLevel, x, y, width, height, internalFormat, colorBuffer);\n      } else {\n        gl.compressedTexImage2D(this._target, mipLevel, internalFormat, width, height, 0, colorBuffer);\n        this._compressedMipFilled |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(this._target, mipLevel, x, y, width, height, baseFormat, dataType, colorBuffer);\n    }\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2D.setImageSource}\n   */\n  setImageSource(\n    imageSource: TexImageSource,\n    mipLevel: number,\n    flipY: boolean,\n    premultiplyAlpha: boolean,\n    x: number,\n    y: number\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(this._target, mipLevel, x || 0, y || 0, baseFormat, dataType, imageSource);\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2D.getPixelBuffer }\n   */\n  getPixelBuffer(x: number, y: number, width: number, height: number, mipLevel: number, out: ArrayBufferView): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(null, x, y, width, height, mipLevel, out);\n  }\n}\n","import { IPlatformTexture2DArray, Texture2DArray, TextureFormat } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Texture 2D array in WebGL platform.\n */\nexport class GLTexture2DArray extends GLTexture implements IPlatformTexture2DArray {\n  constructor(rhi: WebGLRenderer, texture2DArray: Texture2DArray) {\n    super(rhi, texture2DArray, (<WebGL2RenderingContext>rhi.gl).TEXTURE_2D_ARRAY);\n\n    const { format, width, height, length, mipmapCount } = texture2DArray;\n\n    if (!this._isWebGL2) {\n      throw new Error(`Texture2D Array is not supported in WebGL1.0`);\n    }\n\n    if (!GLTexture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    this._bind();\n    this._formatDetail = GLTexture._getFormatDetail(format, this._gl, true);\n    this._gl.texStorage3D(this._target, mipmapCount, this._formatDetail.internalFormat, width, height, length);\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2DArray.setPixelBuffer}\n   */\n  setPixelBuffer(\n    offsetIndex: number,\n    colorBuffer: ArrayBufferView,\n    mipLevel: number,\n    x: number,\n    y: number,\n    width?: number,\n    height?: number,\n    length?: number\n  ): void {\n    const { _target: target, _gl: gl } = this;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n\n    width = width || Math.max(1, this._texture.width >> mipLevel) - x;\n    height = height || Math.max(1, this._texture.height >> mipLevel) - y;\n    length = length || (<Texture2DArray>this._texture).length;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      gl.compressedTexSubImage3D(\n        target,\n        mipLevel,\n        x,\n        y,\n        offsetIndex,\n        width,\n        height,\n        length,\n        internalFormat,\n        colorBuffer\n      );\n    } else {\n      gl.texSubImage3D(target, mipLevel, x, y, offsetIndex, width, height, length, baseFormat, dataType, colorBuffer);\n    }\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2DArray.setImageSource}\n   */\n  setImageSource(\n    elementIndex: number,\n    imageSource: TexImageSource,\n    mipLevel: number,\n    flipY: boolean,\n    premultiplyAlpha: boolean,\n    x: number,\n    y: number\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage3D(\n      this._target,\n      mipLevel,\n      x,\n      y,\n      elementIndex,\n      imageSource.width,\n      imageSource.height,\n      1,\n      baseFormat,\n      dataType,\n      imageSource\n    );\n  }\n\n  /**\n   * {@inheritDoc IPlatformTexture2DArray.getPixelBuffer}\n   */\n  getPixelBuffer(\n    elementIndex: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    const { _gl: gl, _formatDetail: formatDetail } = this;\n\n    if (formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._getReadFrameBuffer());\n    gl.framebufferTextureLayer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, this._glTexture, mipLevel, elementIndex);\n    gl.readPixels(x, y, width, height, formatDetail.baseFormat, formatDetail.dataType, out);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n}\n","import { IPlatformTextureCube, Logger, TextureCube, TextureCubeFace, TextureFormat } from \"@oasis-engine/core\";\nimport { GLTexture } from \"./GLTexture\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Cube texture in WebGL platform.\n */\nexport class GLTextureCube extends GLTexture implements IPlatformTextureCube {\n  /** Backward compatible with WebGL1.0. */\n  private _compressedFaceFilled: number[] = [0, 0, 0, 0, 0, 0];\n\n  constructor(rhi: WebGLRenderer, textureCube: TextureCube) {\n    super(rhi, textureCube, rhi.gl.TEXTURE_CUBE_MAP);\n\n    /** @ts-ignore */\n    const { format, _mipmap, width: size } = textureCube;\n    const isWebGL2 = this._isWebGL2;\n\n    if (!GLTexture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (_mipmap && !isWebGL2 && !GLTexture._isPowerOf2(size)) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n\n      /** @ts-ignore */\n      textureCube._mipmap = false;\n      /** @ts-ignore */\n      textureCube._mipmapCount = textureCube._getMipmapCount();\n    }\n\n    this._formatDetail = GLTexture._getFormatDetail(format, this._gl, isWebGL2);\n    (this._formatDetail.isCompressed && !isWebGL2) || this._initMipmap(true);\n  }\n\n  /**\n   * {@inheritDoc IPlatformTextureCube.setPixelBuffer}\n   */\n  setPixelBuffer(\n    face: TextureCubeFace,\n    colorBuffer: ArrayBufferView,\n    mipLevel: number,\n    x: number,\n    y: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl = this._gl;\n    const isWebGL2 = this._isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipSize = Math.max(1, this._texture.width >> mipLevel);\n\n    width = width || mipSize - x;\n    height = height || mipSize - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedFaceFilled[face] & mipBit) {\n        gl.compressedTexSubImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          x,\n          y,\n          width,\n          height,\n          internalFormat,\n          colorBuffer\n        );\n      } else {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          internalFormat,\n          width,\n          height,\n          0,\n          colorBuffer\n        );\n        this._compressedFaceFilled[face] |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        mipLevel,\n        x,\n        y,\n        width,\n        height,\n        baseFormat,\n        dataType,\n        colorBuffer\n      );\n    }\n  }\n\n  /**\n   * {@inheritDoc IPlatformTextureCube.setImageSource}\n   */\n  setImageSource(\n    face: TextureCubeFace,\n    imageSource: TexImageSource,\n    mipLevel: number,\n    flipY: boolean,\n    premultiplyAlpha: boolean,\n    x: number,\n    y: number\n  ): void {\n    const gl = this._gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n      mipLevel,\n      x || 0,\n      y || 0,\n      baseFormat,\n      dataType,\n      imageSource\n    );\n  }\n\n  /**\n   * {@inheritDoc IPlatformTextureCube.getPixelBuffer}\n   */\n  getPixelBuffer(\n    face: TextureCubeFace,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    mipLevel: number,\n    out: ArrayBufferView\n  ): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(face, x, y, width, height, mipLevel, out);\n  }\n}\n","import {\n  Camera,\n  CameraClearFlags,\n  Canvas,\n  ColorWriteMask,\n  Engine,\n  GLCapabilityType,\n  IHardwareRenderer,\n  IPlatformRenderTarget,\n  IPlatformTexture2D,\n  IPlatformTextureCube,\n  Logger,\n  Mesh,\n  RenderTarget,\n  SubMesh,\n  Texture2D,\n  Texture2DArray,\n  TextureCube\n} from \"@oasis-engine/core\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { Color, Vector4 } from \"@oasis-engine/math\";\nimport { GLCapability } from \"./GLCapability\";\nimport { GLExtensions } from \"./GLExtensions\";\nimport { GLPrimitive } from \"./GLPrimitive\";\nimport { GLRenderStates } from \"./GLRenderStates\";\nimport { GLRenderTarget } from \"./GLRenderTarget\";\nimport { GLTexture } from \"./GLTexture\";\nimport { GLTexture2D } from \"./GLTexture2D\";\nimport { GLTexture2DArray } from \"./GLTexture2DArray\";\nimport { GLTextureCube } from \"./GLTextureCube\";\nimport { WebGLExtension } from \"./type\";\nimport { WebCanvas } from \"./WebCanvas\";\n\n/**\n * WebGL mode.\n */\nexport enum WebGLMode {\n  /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\n  Auto = 0,\n  /** WebGL2.0. */\n  WebGL2 = 1,\n  /** WebGL1.0, */\n  WebGL1 = 2\n}\n\n/**\n * WebGL renderer options.\n */\nexport interface WebGLRendererOptions extends WebGLContextAttributes {\n  /** WebGL mode.*/\n  webGLMode?: WebGLMode;\n}\n\n/**\n * WebGL renderer, including WebGL1.0 and WebGL2.0.\n */\nexport class WebGLRenderer implements IHardwareRenderer {\n  /** @internal */\n  _readFrameBuffer: WebGLFramebuffer;\n\n  _currentBind: any;\n\n  private _options: WebGLRendererOptions;\n  private _gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private _renderStates;\n  private _extensions;\n  private _capability: GLCapability;\n  private _isWebGL2: boolean;\n  private _webCanvas: WebCanvas;\n\n  private _activeTextureID: number;\n  private _activeTextures: GLTexture[] = new Array(32);\n\n  // cache value\n  private _lastViewport: Vector4 = new Vector4(null, null, null, null);\n  private _lastClearColor: Color = new Color(null, null, null, null);\n  private _scissorEnable: boolean = false;\n\n  get isWebGL2() {\n    return this._isWebGL2;\n  }\n\n  /**\n   * GL Context\n   * @member {WebGLRenderingContext}\n   */\n  get gl() {\n    return this._gl;\n  }\n\n  get renderStates(): GLRenderStates {\n    return this._renderStates;\n  }\n\n  get capability(): GLCapability {\n    return this._capability;\n  }\n\n  get canIUseMoreJoints() {\n    return this.capability.canIUseMoreJoints;\n  }\n\n  constructor(options: WebGLRendererOptions = {}) {\n    this._options = options;\n  }\n\n  init(canvas: Canvas) {\n    const option = this._options;\n    option.alpha === undefined && (option.alpha = false);\n    option.stencil === undefined && (option.stencil = true);\n    const webCanvas = (this._webCanvas = (canvas as WebCanvas)._webCanvas);\n    const webGLMode = option.webGLMode || WebGLMode.Auto;\n    let gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n\n    if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL2) {\n      gl = webCanvas.getContext(\"webgl2\", option);\n      if (!gl && (typeof OffscreenCanvas === \"undefined\" || !(webCanvas instanceof OffscreenCanvas))) {\n        gl = <WebGL2RenderingContext>webCanvas.getContext(\"experimental-webgl2\", option);\n      }\n      this._isWebGL2 = true;\n\n      // Prevent weird browsers to lie (such as safari!)\n      if (gl && !(<WebGL2RenderingContext>gl).deleteQuery) {\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL1) {\n        gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"webgl\", option);\n        if (!gl && (typeof OffscreenCanvas === \"undefined\" || !(webCanvas instanceof OffscreenCanvas))) {\n          gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"experimental-webgl\", option);\n        }\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      throw new Error(\"Get GL Context FAILED.\");\n    }\n\n    this._gl = gl;\n    this._activeTextureID = gl.TEXTURE0;\n    this._renderStates = new GLRenderStates(gl);\n    this._extensions = new GLExtensions(this);\n    this._capability = new GLCapability(this);\n    // Make sure the active texture in gl context is on default, because gl context may be used in other webgl renderer.\n    gl.activeTexture(gl.TEXTURE0);\n\n    this._options = null;\n  }\n\n  createPlatformPrimitive(primitive: Mesh): IPlatformPrimitive {\n    return new GLPrimitive(this, primitive);\n  }\n\n  createPlatformTexture2D(texture2D: Texture2D): IPlatformTexture2D {\n    return new GLTexture2D(this, texture2D);\n  }\n\n  createPlatformTexture2DArray(texture2D: Texture2DArray): GLTexture2DArray {\n    return new GLTexture2DArray(this, texture2D);\n  }\n\n  createPlatformTextureCube(textureCube: TextureCube): IPlatformTextureCube {\n    return new GLTextureCube(this, textureCube);\n  }\n\n  createPlatformRenderTarget(target: RenderTarget): IPlatformRenderTarget {\n    return new GLRenderTarget(this, target);\n  }\n\n  requireExtension(ext) {\n    return this._extensions.requireExtension(ext);\n  }\n\n  canIUse(capabilityType: GLCapabilityType) {\n    return this.capability.canIUse(capabilityType);\n  }\n\n  canIUseCompressedTextureInternalFormat(type: number) {\n    return this.capability.canIUseCompressedTextureInternalFormat(type);\n  }\n\n  viewport(x: number, y: number, width: number, height: number): void {\n    const { _gl: gl, _lastViewport: lv } = this;\n    if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\n      const { _webCanvas: webCanvas } = this;\n      if (x === 0 && y === 0 && width === webCanvas.width && height === webCanvas.height) {\n        if (this._scissorEnable) {\n          gl.disable(gl.SCISSOR_TEST);\n          this._scissorEnable = false;\n        }\n      } else {\n        if (!this._scissorEnable) {\n          gl.enable(gl.SCISSOR_TEST);\n          this._scissorEnable = true;\n        }\n        gl.scissor(x, y, width, height);\n      }\n      gl.viewport(x, y, width, height);\n      lv.set(x, y, width, height);\n    }\n  }\n\n  colorMask(r, g, b, a) {\n    this._gl.colorMask(r, g, b, a);\n  }\n\n  clearRenderTarget(engine: Engine, clearFlags: CameraClearFlags, clearColor: Color) {\n    const gl = this._gl;\n    const {\n      blendState: { targetBlendState },\n      depthState,\n      stencilState\n    } = engine._lastRenderState;\n    let clearFlag = 0;\n    if (clearFlags & CameraClearFlags.Color) {\n      clearFlag |= gl.COLOR_BUFFER_BIT;\n\n      const lc = this._lastClearColor;\n      const { r, g, b, a } = clearColor;\n      if (clearColor && (r !== lc.r || g !== lc.g || b !== lc.b || a !== lc.a)) {\n        gl.clearColor(r, g, b, a);\n        lc.set(r, g, b, a);\n      }\n\n      if (targetBlendState.colorWriteMask !== ColorWriteMask.All) {\n        gl.colorMask(true, true, true, true);\n        targetBlendState.colorWriteMask = ColorWriteMask.All;\n      }\n    }\n    if (clearFlags & CameraClearFlags.Depth) {\n      clearFlag |= gl.DEPTH_BUFFER_BIT;\n      if (depthState.writeEnabled !== true) {\n        gl.depthMask(true);\n        depthState.writeEnabled = true;\n      }\n    }\n    if (clearFlags & CameraClearFlags.Stencil) {\n      clearFlag |= gl.STENCIL_BUFFER_BIT;\n      if (stencilState.writeMask !== 0xff) {\n        gl.stencilMask(0xff);\n        stencilState.writeMask = 0xff;\n      }\n    }\n    gl.clear(clearFlag);\n  }\n\n  drawPrimitive(primitive: Mesh, subPrimitive: SubMesh, shaderProgram: any) {\n    // todo: VAO not support morph animation\n    if (primitive) {\n      //@ts-ignore\n      primitive._draw(shaderProgram, subPrimitive);\n    } else {\n      Logger.error(\"draw primitive failed.\");\n    }\n  }\n\n  activeRenderTarget(renderTarget: RenderTarget, camera: Camera, mipLevel: number) {\n    const gl = this._gl;\n    if (renderTarget) {\n      /** @ts-ignore */\n      (renderTarget._platformRenderTarget as GLRenderTarget)?._activeRenderTarget();\n      const { width, height } = renderTarget;\n      this.viewport(0, 0, width >> mipLevel, height >> mipLevel);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      const viewport = camera.viewport;\n      const { drawingBufferWidth, drawingBufferHeight } = gl;\n      const width = drawingBufferWidth * viewport.z;\n      const height = drawingBufferHeight * viewport.w;\n      const x = viewport.x * drawingBufferWidth;\n      const y = drawingBufferHeight - viewport.y * drawingBufferHeight - height;\n      this.viewport(x, y, width, height);\n    }\n  }\n\n  destroy() {}\n\n  activeTexture(textureID: number): void {\n    if (this._activeTextureID !== textureID) {\n      this._gl.activeTexture(textureID);\n      this._activeTextureID = textureID;\n    }\n  }\n\n  bindTexture(texture: GLTexture): void {\n    const index = this._activeTextureID - this._gl.TEXTURE0;\n    if (this._activeTextures[index] !== texture) {\n      this._gl.bindTexture(texture._target, texture._glTexture);\n      this._activeTextures[index] = texture;\n    }\n  }\n}\n","import { Engine } from \"@oasis-engine/core\";\nimport { WebCanvas } from \"./WebCanvas\";\nimport { WebGLRenderer, WebGLRendererOptions } from \"./WebGLRenderer\";\n\ntype OffscreenCanvas = any;\n\n/**\n * WebGL platform engine,support includes WebGL1.0 and WebGL2.0.\n */\nexport class WebGLEngine extends Engine {\n  /**\n   * Create an engine suitable for the WebGL platform.\n   * @param canvas - Native web canvas\n   * @param webGLRendererOptions - WebGL renderer options\n   */\n  constructor(canvas: string | HTMLCanvasElement | OffscreenCanvas, webGLRendererOptions?: WebGLRendererOptions) {\n    const webCanvas = new WebCanvas(\n      <HTMLCanvasElement | OffscreenCanvas>(typeof canvas === \"string\" ? document.getElementById(canvas) : canvas)\n    );\n    const hardwareRenderer = new WebGLRenderer(webGLRendererOptions);\n    super(webCanvas, hardwareRenderer);\n  }\n\n  /**\n   * Web canvas.\n   */\n  get canvas(): WebCanvas {\n    return this._canvas as WebCanvas;\n  }\n}\n"],"names":["GLCompressedTextureInternalFormat","WebCanvas","resizeByClientSize","pixelRatio","window","devicePixelRatio","webCanvas","_webCanvas","OffscreenCanvas","width","clientWidth","height","clientHeight","_width","_height","_scale","Vector2","setScale","x","y","set","scale","value","style","transformOrigin","transform","GLCapability","rhi","_maxDrawBuffers","_maxAnisoLevel","_maxAntiAliasing","_rhi","capabilityList","Map","_init","_compatibleAllInterface","canIUse","capabilityType","get","canIUseCompressedTextureInternalFormat","internalType","RGBA_ASTC_4X4_KHR","RGBA_ASTC_12X12_KHR","SRGB8_ALPHA8_ASTC_4X4_KHR","SRGB8_ALPHA8_ASTC_12X12_KHR","RGB_ETC1_WEBGL","R11_EAC","SRGB8_ALPHA8_ETC2_EAC","RGB_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_IMG","RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT5_EXT","GLCapabilityType","astc","etc1","etc","pvrtc","s3tc","cap","isWebGL2","requireExtension","bind","shaderVertexID","standardDerivatives","shaderTextureLod","elementIndexUint","depthTexture","vertexArrayObject","instancedArrays","multipleSample","drawBuffers","astc_webkit","etc_webkit","etc1_webkit","pvrtc_webkit","s3tc_webkit","textureFloat","textureHalfFloat","textureFloatLinear","textureHalfFloatLinear","WEBGL_colorBufferFloat","colorBufferFloat","colorBufferHalfFloat","textureFilterAnisotropic","_compatibleInterface","flatItem","gl","ext","glKey","extensionKey","extensionVal","UNSIGNED_INT_24_8","createVertexArray","deleteVertexArray","isVertexArray","bindVertexArray","drawArraysInstanced","drawElementsInstanced","vertexAttribDivisor","MAX_DRAW_BUFFERS","items","maxDrawBuffers","i","_objectSpread","HAFL_FLOAT","RGBA16F","RGBA32F","TEXTURE_MAX_ANISOTROPY_EXT","renderStates","getParameter","MAX_TEXTURE_SIZE","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","canMSAA","MAX_SAMPLES","GLExtensions","_requireResult","undefined","getExtension","GLPrimitive","primitive","attribLocArray","_primitive","canUseInstancedArrays","vao","_useVao","draw","shaderProgram","subMesh","useVao","_enableVAO","has","id","registerVAO","bindBufferAndAttrib","_indexBufferBinding","_instanceCount","_glIndexType","_glIndexByteCount","topology","start","count","drawElements","_nativeBuffer","buffer","bindBuffer","ELEMENT_ARRAY_BUFFER","drawArrays","Logger","error","disableAttrib","destroy","forEach","clear","vertexBufferBindings","_vertexBufferBindings","length","attributeLocation","attributes","_vertexElementMap","vbo","lastBoundVbo","name","loc","element","bindingIndex","stride","ARRAY_BUFFER","enableVertexAttribArray","elementInfo","_glElementInfo","vertexAttribPointer","size","type","normalized","offset","instanceStepRate","push","warn","l","disableVertexAttribArray","GLRenderStates","_gl","_parameters","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_ATTRIBS","blendFuncSeparate","ONE","ZERO","blendEquationSeparate","FUNC_ADD","colorMask","blendColor","disable","SAMPLE_ALPHA_TO_COVERAGE","enable","DEPTH_TEST","depthFunc","LESS","depthMask","STENCIL_TEST","stencilFuncSeparate","FRONT","ALWAYS","BACK","stencilOpSeparate","KEEP","stencilMask","CULL_FACE","cullFace","POLYGON_OFFSET_FILL","polygonOffset","pname","GLTexture","_isPowerOf2","v","_getFormatDetail","format","TextureFormat","R8G8B8","internalFormat","RGB8","RGB","baseFormat","dataType","UNSIGNED_BYTE","isCompressed","R8G8B8A8","RGBA8","RGBA","R4G4B4A4","RGBA4","UNSIGNED_SHORT_4_4_4_4","R5G5B5A1","RGB5_A1","UNSIGNED_SHORT_5_5_5_1","R5G6B5","RGB565","UNSIGNED_SHORT_5_6_5","Alpha8","ALPHA","LuminanceAlpha","LUMINANCE_ALPHA","R16G16B16A16","HALF_FLOAT","R32G32B32A32","FLOAT","DXT1","DXT5","ETC1_RGB","ETC2_RGB","RGB8_ETC2","ETC2_RGBA5","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA8","RGBA8_ETC2_EAC","PVRTC_RGB2","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","PVRTC_RGB4","PVRTC_RGBA4","RGBA_PVRTC_4BPPV1_IMG","ASTC_4x4","ASTC_5x5","RGBA_ASTC_5X5_KHR","ASTC_6x6","RGBA_ASTC_6X6_KHR","ASTC_8x8","RGBA_ASTC_8X8_KHR","ASTC_10x10","RGBA_ASTC_10X10_KHR","ASTC_12x12","Error","_getRenderBufferDepthFormatDetail","Depth","RenderBufferDepthFormat","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_INT","attachment","DEPTH_ATTACHMENT","DepthStencil","DEPTH24_STENCIL8","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","Stencil","STENCIL_INDEX8","STENCIL_ATTACHMENT","Depth16","Depth24","DEPTH_COMPONENT24","Depth32","Depth24Stencil8","Depth32Stencil8","DEPTH32F_STENCIL8","FLOAT_32_UNSIGNED_INT_24_8_REV","_supportTextureFormat","isSupported","_supportRenderBufferColorFormat","_supportRenderBufferDepthFormat","isTexture","texture","target","_texture","_glTexture","_isWebGL2","_target","_formatDetail","createTexture","deleteTexture","generateMipmaps","_bind","generateMipmap","bindTexture","_initMipmap","isCube","mipmapCount","texStorage2D","mipWidth","Math","max","mipHeight","texImage2D","faceIndex","TEXTURE_CUBE_MAP_POSITIVE_X","_getPixelBuffer","face","mipLevel","out","bindFramebuffer","FRAMEBUFFER","_getReadFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","_setWrapMode","TextureWrapMode","Clamp","texParameteri","CLAMP_TO_EDGE","Repeat","REPEAT","Mirror","MIRRORED_REPEAT","frameBuffer","_readFrameBuffer","createFramebuffer","TEXTURE_WRAP_S","TEXTURE_WRAP_T","_mipmap","TextureFilterMode","Point","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","NEAREST_MIPMAP_NEAREST","Bilinear","LINEAR","LINEAR_MIPMAP_NEAREST","Trilinear","LINEAR_MIPMAP_LINEAR","texParameterf","GLRenderTarget","_frameBuffer","_MSAAFrameBuffer","_depthRenderBuffer","_MSAAColorRenderBuffers","_MSAADepthRenderBuffer","_oriDrawBuffers","_blitDrawBuffers","_curMipLevel","_colorTextures","_depth","isDepthTexture","Texture","n","_format","some","TextureCube","maxAntiAliasing","capability","antiAliasing","_antiAliasing","_bindMainFBO","_bindMSAAFBO","setRenderTargetInfo","colorTexture","getColorTexture","mipChanged","_platformTexture","platformTexture","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","_activeRenderTarget","blitRenderTarget","mask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","colorTextureCount","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","textureIndex","readBuffer","blitFramebuffer","NONE","deleteFramebuffer","deleteRenderbuffer","Array","depthRenderBuffer","createRenderbuffer","framebufferRenderbuffer","MSAADepthRenderBuffer","MSAAColorRenderBuffer","renderbufferStorageMultisample","_checkFrameBuffer","e","checkFramebufferStatus","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","GLTexture2D","texture2D","_compressedMipFilled","_mipmapCount","_getMipmapCount","setPixelBuffer","colorBuffer","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mipBit","compressedTexSubImage2D","compressedTexImage2D","texSubImage2D","setImageSource","imageSource","flipY","premultiplyAlpha","getPixelBuffer","GLTexture2DArray","texture2DArray","TEXTURE_2D_ARRAY","texStorage3D","offsetIndex","compressedTexSubImage3D","texSubImage3D","elementIndex","formatDetail","framebufferTextureLayer","GLTextureCube","textureCube","TEXTURE_CUBE_MAP","_compressedFaceFilled","mipSize","WebGLMode","WebGLRenderer","options","_currentBind","_options","_renderStates","_extensions","_capability","_activeTextureID","_activeTextures","_lastViewport","Vector4","_lastClearColor","Color","_scissorEnable","init","canvas","option","alpha","stencil","webGLMode","Auto","WebGL2","getContext","deleteQuery","WebGL1","TEXTURE0","activeTexture","createPlatformPrimitive","createPlatformTexture2D","createPlatformTexture2DArray","createPlatformTextureCube","createPlatformRenderTarget","viewport","lv","z","w","SCISSOR_TEST","scissor","r","g","b","a","clearRenderTarget","engine","clearFlags","clearColor","_lastRenderState","targetBlendState","blendState","depthState","stencilState","clearFlag","CameraClearFlags","lc","colorWriteMask","ColorWriteMask","All","writeEnabled","STENCIL_BUFFER_BIT","writeMask","drawPrimitive","subPrimitive","_draw","activeRenderTarget","renderTarget","camera","_platformRenderTarget","drawingBufferWidth","drawingBufferHeight","textureID","index","canIUseMoreJoints","WebGLEngine","webGLRendererOptions","document","getElementById","hardwareRenderer","_canvas","Engine"],"mappings":"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"}